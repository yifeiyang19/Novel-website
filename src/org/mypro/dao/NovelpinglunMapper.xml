<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mypro.dao.NovelpinglunMapper">
    <resultMap id="BaseResultMap" type="org.mypro.entity.Novelpinglun">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="novel" jdbcType="VARCHAR" property="novel"/>
        <result column="novelid" jdbcType="INTEGER" property="novelid"/>
        <result column="neirong" jdbcType="VARCHAR" property="neirong"/>
        <result column="pinglunrenmingzi" jdbcType="VARCHAR" property="pinglunrenmingzi"/>
        <result column="pinglunrenid" jdbcType="INTEGER" property="pinglunrenid"/>
        <result column="pinglunshijian" jdbcType="VARCHAR" property="pinglunshijian"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, novel, novelid, neirong, pinglunrenmingzi, pinglunrenid, pinglunshijian
  </sql>
    <select id="selectByExample" parameterType="org.mypro.entity.NovelpinglunExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_novelpinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_novelpinglun
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_novelpinglun
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.mypro.entity.NovelpinglunExample">
        delete from t_novelpinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.mypro.entity.Novelpinglun">
    insert into t_novelpinglun (id, novel, novelid, 
      neirong, pinglunrenmingzi, pinglunrenid, 
      pinglunshijian)
    values (#{id,jdbcType=INTEGER}, #{novel,jdbcType=VARCHAR}, #{novelid,jdbcType=INTEGER}, 
      #{neirong,jdbcType=VARCHAR}, #{pinglunrenmingzi,jdbcType=VARCHAR}, #{pinglunrenid,jdbcType=INTEGER}, 
      #{pinglunshijian,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.mypro.entity.Novelpinglun">
        insert into t_novelpinglun
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="novel != null">
                novel,
            </if>
            <if test="novelid != null">
                novelid,
            </if>
            <if test="neirong != null">
                neirong,
            </if>
            <if test="pinglunrenmingzi != null">
                pinglunrenmingzi,
            </if>
            <if test="pinglunrenid != null">
                pinglunrenid,
            </if>
            <if test="pinglunshijian != null">
                pinglunshijian,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="novel != null">
                #{novel,jdbcType=VARCHAR},
            </if>
            <if test="novelid != null">
                #{novelid,jdbcType=INTEGER},
            </if>
            <if test="neirong != null">
                #{neirong,jdbcType=VARCHAR},
            </if>
            <if test="pinglunrenmingzi != null">
                #{pinglunrenmingzi,jdbcType=VARCHAR},
            </if>
            <if test="pinglunrenid != null">
                #{pinglunrenid,jdbcType=INTEGER},
            </if>
            <if test="pinglunshijian != null">
                #{pinglunshijian,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.mypro.entity.NovelpinglunExample" resultType="java.lang.Long">
        select count(*) from t_novelpinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_novelpinglun
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.novel != null">
                novel = #{record.novel,jdbcType=VARCHAR},
            </if>
            <if test="record.novelid != null">
                novelid = #{record.novelid,jdbcType=INTEGER},
            </if>
            <if test="record.neirong != null">
                neirong = #{record.neirong,jdbcType=VARCHAR},
            </if>
            <if test="record.pinglunrenmingzi != null">
                pinglunrenmingzi = #{record.pinglunrenmingzi,jdbcType=VARCHAR},
            </if>
            <if test="record.pinglunrenid != null">
                pinglunrenid = #{record.pinglunrenid,jdbcType=INTEGER},
            </if>
            <if test="record.pinglunshijian != null">
                pinglunshijian = #{record.pinglunshijian,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_novelpinglun
        set id = #{record.id,jdbcType=INTEGER},
        novel = #{record.novel,jdbcType=VARCHAR},
        novelid = #{record.novelid,jdbcType=INTEGER},
        neirong = #{record.neirong,jdbcType=VARCHAR},
        pinglunrenmingzi = #{record.pinglunrenmingzi,jdbcType=VARCHAR},
        pinglunrenid = #{record.pinglunrenid,jdbcType=INTEGER},
        pinglunshijian = #{record.pinglunshijian,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.mypro.entity.Novelpinglun">
        update t_novelpinglun
        <set>
            <if test="novel != null">
                novel = #{novel,jdbcType=VARCHAR},
            </if>
            <if test="novelid != null">
                novelid = #{novelid,jdbcType=INTEGER},
            </if>
            <if test="neirong != null">
                neirong = #{neirong,jdbcType=VARCHAR},
            </if>
            <if test="pinglunrenmingzi != null">
                pinglunrenmingzi = #{pinglunrenmingzi,jdbcType=VARCHAR},
            </if>
            <if test="pinglunrenid != null">
                pinglunrenid = #{pinglunrenid,jdbcType=INTEGER},
            </if>
            <if test="pinglunshijian != null">
                pinglunshijian = #{pinglunshijian,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.mypro.entity.Novelpinglun">
    update t_novelpinglun
    set novel = #{novel,jdbcType=VARCHAR},
      novelid = #{novelid,jdbcType=INTEGER},
      neirong = #{neirong,jdbcType=VARCHAR},
      pinglunrenmingzi = #{pinglunrenmingzi,jdbcType=VARCHAR},
      pinglunrenid = #{pinglunrenid,jdbcType=INTEGER},
      pinglunshijian = #{pinglunshijian,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>